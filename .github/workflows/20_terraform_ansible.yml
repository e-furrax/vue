name: Terraform

on:
  workflow_run:
    workflows:
      - Artifact
    branches:
      - main
    types:
      - completed

jobs:
  common:
    name: 'Terraform'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout/@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Generate ssh key
        working-directory: ./ci
        run: |
          mkdir .ssh
          cd .ssh
          echo "$AWS_PRIVATE_KEY" > id_rsa_aws
          echo "$AWS_PUBLIC_KEY" > id_rsa_aws.pub
          chmod 600 *
        env:
          AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
          AWS_PUBLIC_KEY: ${{ secrets.AWS_PUBLIC_KEY  }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: terraform init
        working-directory: ./ci/10_deploy
        run: terraform init

      - name: terraform fmt
        working-directory: ./ci/10_deploy
        run: terraform fmt

      - name: terraform plan
        working-directory: ./ci/10_deploy
        run: terraform plan -var="postgres_password=${{ secrets.POSTGRES_PASSWORD }}"

      - name: terraform apply
        working-directory: ./ci/10_deploy
        if: ${{ github.ref == 'refs/heads/main' }}
        run: terraform apply --auto-approve -var="postgres_password=${{ secrets.POSTGRES_PASSWORD }}"

      - name: Mongo Ansible playbook
        working-directory: ./ci/20_ansible
        if: ${{ github.ref == 'refs/heads/main' }}
        run: ansible-playbook mongo.yml --verbose --private-key ../.ssh/id_rsa_aws

      - name: Web Ansible playbook
        working-directory: ./ci/20_ansible
        if: ${{ github.ref == 'refs/heads/main' }}
        run: ansible-playbook install.yml --verbose --extra-vars="username=e-furrax access_token=${{ secrets.GITHUB_TOKEN }} postgres_password=${{ secrets.POSTGRES_PASSWORD }} mongo_password=${{ secrets.MONGO_PASSWORD }} redis_password=${{ secrets.REDIS_PASSWORD }} gmail_password=${{ secrets.GMAIL_PASSWORD }} s3_bucket_name=${{ secrets.AWS_S3_BUCKET }} aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }} aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"  --private-key ../.ssh/id_rsa_aws
