name: Deploy

on:
  workflow_run:
    workflows:
      - Common Jobs
    branches:
      - main
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: 'Deploy application to production'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout/@v2

      - name: Download build artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: common.yml
          workflow_conclusion: success
          name: dist
          path: dist

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Generate ssh key
        working-directory: ./ci
        run: |
          mkdir .ssh
          cd .ssh
          echo "$AWS_PRIVATE_KEY" > id_rsa_aws
          echo "$AWS_PUBLIC_KEY" > id_rsa_aws.pub
          chmod 600 *
        env:
          AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
          AWS_PUBLIC_KEY: ${{ secrets.AWS_PUBLIC_KEY  }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: terraform init
        working-directory: ./ci/10_deploy
        run: terraform init
      - name: terraform fmt
        working-directory: ./ci/10_deploy
        run: terraform fmt
      - name: terraform plan
        working-directory: ./ci/10_deploy
        run: terraform plan -var="postgres_password=${{ secrets.POSTGRES_PASSWORD }}"
      - name: terraform apply
        working-directory: ./ci/10_deploy
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'workflow_run' }}
        run: terraform apply --auto-approve -var="postgres_password=${{ secrets.POSTGRES_PASSWORD }}"
      - name: Ansible playbook
        working-directory: ./ci/20_ansible
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'workflow_run' }}
        run: ansible-playbook install.yml --verbose --extra-vars="username=e-furrax access_token=${{ secrets.GITHUB_TOKEN }} postgres_password=${{ secrets.POSTGRES_PASSWORD }}" --private-key ../.ssh/id_rsa_aws
      
